name: es-translator - CI

on:
  push:
    branches: [ master ]

jobs:
  container-test-job:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 3
      matrix:
        python-version: ['3.10']

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
        env:
          discovery.type: single-node
          cluster.name: es-translator
          ES_JAVA_OPTS: -Xms256m -Xmx256m
        options: --health-cmd "curl -f http://localhost:9200" --health-interval 10s --health-timeout 5s --health-retries 10

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Add Apertium repository
        run: wget https://apertium.projectjj.com/apt/install-nightly.sh -O - | sudo bash

      - name: Install Apertium
        run: sudo apt install -f -qq -y apertium-all-dev dpkg-dev fakeroot lintian

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      - name: Install Python dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root 
          
      - name: Build es-translator
        run: poetry build

      - name: Workaround to catch syntax error in stanza
        env:
          PYTHON_VERSION: ${{matrix.python-version}}
        run: |
          export VENV_PATH=$(poetry env info -p)
          export BEAM_FILE=$VENV_PATH/lib/python$PYTHON_VERSION/site-packages/stanza/models/common/beam.py
          sed -i '/"""/,/"""/ d' $BEAM_FILE

      - name: Run tests
        run: make test
